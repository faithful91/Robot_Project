package com.example.tabclient;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.net.UnknownHostException;


import android.app.Activity;
import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.Surface;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

public class AndroidClient extends Activity implements SensorEventListener  {
	private float mLastX, mLastY, mLastZ;
	private boolean mInitialized;
	private SensorManager mSensorManager;
    private Sensor mAccelerometer;
    private final float NOISE = (float) 2.0;

	     
	     EditText textOut;
	 	TextView textIn;
	 	
	 	//ok
	     /** Called when the activity is first created. */
	     @Override
	     public void onCreate(Bundle savedInstanceState) {
	         super.onCreate(savedInstanceState);
	         setContentView(R.layout.main);
	         mInitialized = false;
	         mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
	         mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
	         mSensorManager.registerListener(this, mAccelerometer , SensorManager.SENSOR_DELAY_NORMAL);
	         textOut = (EditText)findViewById(R.id.textout1);
	         Button buttonSend = (Button)findViewById(R.id.send);
	         textIn = (TextView)findViewById(R.id.textin);
	         buttonSend.setOnClickListener(buttonSendOnClickListener);
	     }
	     
	     Button.OnClickListener buttonSendOnClickListener
	     = new Button.OnClickListener(){

	 		@Override
	 		public void onClick(View arg0) {
	 			// TODO Auto-generated method stub
	 			Socket s = null;
	 			
	 			
	 			try {
	 				s = new Socket("192.168.0.10", 8888);
	 				BufferedReader in = new BufferedReader(new InputStreamReader(s.getInputStream()));
	 				BufferedWriter out = new BufferedWriter(new OutputStreamWriter(s.getOutputStream()));
	 				out.write(textOut.getText().toString());
	 				out.flush();
	 				
	 				//close connection
	 				s.close();
	 			} catch (UnknownHostException e) {
	 				// TODO Auto-generated catch block
	 				e.printStackTrace();
	 			} catch (IOException e) {
	 				// TODO Auto-generated catch block
	 				e.printStackTrace();
	 			}
	 			
	 				
	 				
	 				
	 				
	 				
	 				
	 			
	 		}};

		
		
	 		public void onAccuracyChanged(Sensor sensor, int accuracy) {
	 			// can be safely ignored for this demo
	 		}

	 		@Override
	 		public void onSensorChanged(SensorEvent event) {
	 			TextView tvX= (TextView)findViewById(R.id.x_axis);
	 			TextView tvY= (TextView)findViewById(R.id.y_axis);
	 			TextView tvZ= (TextView)findViewById(R.id.z_axis);
	 			float x = event.values[0];
	 			float y = event.values[1];
	 			float z = event.values[2];
	 			if (!mInitialized) {
	 				mLastX = x;
	 				mLastY = y;
	 				mLastZ = z;
	 				
	 				mInitialized = true;
	 			} else {
	 				float deltaX = event.values[0];
	 				float deltaY =event.values[1];
	 				float deltaZ = event.values[2];
	 				
	 				mLastX = x;
	 				mLastY = y;
	 				mLastZ = z;
	 				tvX.setText(Float.toString(deltaX));
	 				tvY.setText(Float.toString(deltaY));
	 				tvZ.setText(Float.toString(deltaZ));
		 			Socket s = null;

	 				try {
						s = new Socket("192.168.0.10", 8888);
					} catch (UnknownHostException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
	 				try {
						BufferedReader in = new BufferedReader(new InputStreamReader(s.getInputStream()));
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
	 				BufferedWriter out = null;
					try {
						out = new BufferedWriter(new OutputStreamWriter(s.getOutputStream()));
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
	 				try {
						out.write( "X ["+tvX.getText().toString()+"]"+ " Y ["+tvY.getText().toString()+"]"+" Z ["+tvZ.getText().toString()+"]");
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
	 				
	 				
	 				//close connection
	 				try {
						s.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
	 			}
	 		}
	  
	 }
