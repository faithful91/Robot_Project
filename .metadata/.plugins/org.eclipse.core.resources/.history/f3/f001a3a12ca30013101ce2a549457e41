import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
  
import javax.bluetooth.*;
import javax.microedition.io.*;
  
/**
* Class that implements an SPP Server which accepts single line of
* message from an SPP client and sends a single line of response to the client.
*/
public class SimpleSPPServer {
    
    
  
    public static void main(String[] args) throws IOException {
        
        //display local device address and name
        LocalDevice localDevice = LocalDevice.getLocalDevice();
        System.out.println("Address: "+localDevice.getBluetoothAddress());
        System.out.println("Name: "+localDevice.getFriendlyName());
      
       //Create a UUID for SPP
       UUID uuid = new UUID("1101", true);
       //Create the servicve url
       String connectionString = "btspp://localhost:" + uuid +";name=Sample SPP Server";
       	
      
       //open server url
       StreamConnectionNotifier streamConnNotifier = (StreamConnectionNotifier)Connector.open( connectionString );
       
       //Wait for client connection
       System.out.println("\nServer Started. Waiting for clients to connect...");
       StreamConnection connection=streamConnNotifier.acceptAndOpen();
       while (true){
         	 try{ 
       RemoteDevice dev = RemoteDevice.getRemoteDevice(connection);
       System.out.println("Remote device address: "+dev.getBluetoothAddress());
       System.out.println("Remote device name: "+dev.getFriendlyName(true));
       
       //read string from spp client
       DataInputStream inStream=connection.openDataInputStream();
       BufferedReader bReader=new BufferedReader(new InputStreamReader(inStream));
       String lineRead=bReader.readLine();
       System.out.println(lineRead);
       
       //send response to spp client
       DataOutputStream outStream=connection.openDataOutputStream();
       PrintWriter pWriter=new PrintWriter(new OutputStreamWriter(outStream));
       pWriter.write("Response String from SPP Server\r\n");
       pWriter.flush();
 
       pWriter.close();
       streamConnNotifier.close();
 
       }catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
       }}
 
        
    }
}